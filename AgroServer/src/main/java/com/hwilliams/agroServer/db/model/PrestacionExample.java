package com.hwilliams.agroServer.db.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class PrestacionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table prestacion
     *
     * @mbggenerated Sun Jun 19 15:33:44 ART 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table prestacion
     *
     * @mbggenerated Sun Jun 19 15:33:44 ART 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table prestacion
     *
     * @mbggenerated Sun Jun 19 15:33:44 ART 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table prestacion
     *
     * @mbggenerated Sun Jun 19 15:33:44 ART 2016
     */
    public PrestacionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table prestacion
     *
     * @mbggenerated Sun Jun 19 15:33:44 ART 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table prestacion
     *
     * @mbggenerated Sun Jun 19 15:33:44 ART 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table prestacion
     *
     * @mbggenerated Sun Jun 19 15:33:44 ART 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table prestacion
     *
     * @mbggenerated Sun Jun 19 15:33:44 ART 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table prestacion
     *
     * @mbggenerated Sun Jun 19 15:33:44 ART 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table prestacion
     *
     * @mbggenerated Sun Jun 19 15:33:44 ART 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table prestacion
     *
     * @mbggenerated Sun Jun 19 15:33:44 ART 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table prestacion
     *
     * @mbggenerated Sun Jun 19 15:33:44 ART 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table prestacion
     *
     * @mbggenerated Sun Jun 19 15:33:44 ART 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table prestacion
     *
     * @mbggenerated Sun Jun 19 15:33:44 ART 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table prestacion
     *
     * @mbggenerated Sun Jun 19 15:33:44 ART 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andPropietarioIdIsNull() {
            addCriterion("propietario_id is null");
            return (Criteria) this;
        }

        public Criteria andPropietarioIdIsNotNull() {
            addCriterion("propietario_id is not null");
            return (Criteria) this;
        }

        public Criteria andPropietarioIdEqualTo(Integer value) {
            addCriterion("propietario_id =", value, "propietarioId");
            return (Criteria) this;
        }

        public Criteria andPropietarioIdNotEqualTo(Integer value) {
            addCriterion("propietario_id <>", value, "propietarioId");
            return (Criteria) this;
        }

        public Criteria andPropietarioIdGreaterThan(Integer value) {
            addCriterion("propietario_id >", value, "propietarioId");
            return (Criteria) this;
        }

        public Criteria andPropietarioIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("propietario_id >=", value, "propietarioId");
            return (Criteria) this;
        }

        public Criteria andPropietarioIdLessThan(Integer value) {
            addCriterion("propietario_id <", value, "propietarioId");
            return (Criteria) this;
        }

        public Criteria andPropietarioIdLessThanOrEqualTo(Integer value) {
            addCriterion("propietario_id <=", value, "propietarioId");
            return (Criteria) this;
        }

        public Criteria andPropietarioIdIn(List<Integer> values) {
            addCriterion("propietario_id in", values, "propietarioId");
            return (Criteria) this;
        }

        public Criteria andPropietarioIdNotIn(List<Integer> values) {
            addCriterion("propietario_id not in", values, "propietarioId");
            return (Criteria) this;
        }

        public Criteria andPropietarioIdBetween(Integer value1, Integer value2) {
            addCriterion("propietario_id between", value1, value2, "propietarioId");
            return (Criteria) this;
        }

        public Criteria andPropietarioIdNotBetween(Integer value1, Integer value2) {
            addCriterion("propietario_id not between", value1, value2, "propietarioId");
            return (Criteria) this;
        }

        public Criteria andMaquinaIdIsNull() {
            addCriterion("maquina_id is null");
            return (Criteria) this;
        }

        public Criteria andMaquinaIdIsNotNull() {
            addCriterion("maquina_id is not null");
            return (Criteria) this;
        }

        public Criteria andMaquinaIdEqualTo(Integer value) {
            addCriterion("maquina_id =", value, "maquinaId");
            return (Criteria) this;
        }

        public Criteria andMaquinaIdNotEqualTo(Integer value) {
            addCriterion("maquina_id <>", value, "maquinaId");
            return (Criteria) this;
        }

        public Criteria andMaquinaIdGreaterThan(Integer value) {
            addCriterion("maquina_id >", value, "maquinaId");
            return (Criteria) this;
        }

        public Criteria andMaquinaIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("maquina_id >=", value, "maquinaId");
            return (Criteria) this;
        }

        public Criteria andMaquinaIdLessThan(Integer value) {
            addCriterion("maquina_id <", value, "maquinaId");
            return (Criteria) this;
        }

        public Criteria andMaquinaIdLessThanOrEqualTo(Integer value) {
            addCriterion("maquina_id <=", value, "maquinaId");
            return (Criteria) this;
        }

        public Criteria andMaquinaIdIn(List<Integer> values) {
            addCriterion("maquina_id in", values, "maquinaId");
            return (Criteria) this;
        }

        public Criteria andMaquinaIdNotIn(List<Integer> values) {
            addCriterion("maquina_id not in", values, "maquinaId");
            return (Criteria) this;
        }

        public Criteria andMaquinaIdBetween(Integer value1, Integer value2) {
            addCriterion("maquina_id between", value1, value2, "maquinaId");
            return (Criteria) this;
        }

        public Criteria andMaquinaIdNotBetween(Integer value1, Integer value2) {
            addCriterion("maquina_id not between", value1, value2, "maquinaId");
            return (Criteria) this;
        }

        public Criteria andFechaDesdeIsNull() {
            addCriterion("fecha_desde is null");
            return (Criteria) this;
        }

        public Criteria andFechaDesdeIsNotNull() {
            addCriterion("fecha_desde is not null");
            return (Criteria) this;
        }

        public Criteria andFechaDesdeEqualTo(Date value) {
            addCriterionForJDBCDate("fecha_desde =", value, "fechaDesde");
            return (Criteria) this;
        }

        public Criteria andFechaDesdeNotEqualTo(Date value) {
            addCriterionForJDBCDate("fecha_desde <>", value, "fechaDesde");
            return (Criteria) this;
        }

        public Criteria andFechaDesdeGreaterThan(Date value) {
            addCriterionForJDBCDate("fecha_desde >", value, "fechaDesde");
            return (Criteria) this;
        }

        public Criteria andFechaDesdeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("fecha_desde >=", value, "fechaDesde");
            return (Criteria) this;
        }

        public Criteria andFechaDesdeLessThan(Date value) {
            addCriterionForJDBCDate("fecha_desde <", value, "fechaDesde");
            return (Criteria) this;
        }

        public Criteria andFechaDesdeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("fecha_desde <=", value, "fechaDesde");
            return (Criteria) this;
        }

        public Criteria andFechaDesdeIn(List<Date> values) {
            addCriterionForJDBCDate("fecha_desde in", values, "fechaDesde");
            return (Criteria) this;
        }

        public Criteria andFechaDesdeNotIn(List<Date> values) {
            addCriterionForJDBCDate("fecha_desde not in", values, "fechaDesde");
            return (Criteria) this;
        }

        public Criteria andFechaDesdeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("fecha_desde between", value1, value2, "fechaDesde");
            return (Criteria) this;
        }

        public Criteria andFechaDesdeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("fecha_desde not between", value1, value2, "fechaDesde");
            return (Criteria) this;
        }

        public Criteria andFechaHastaIsNull() {
            addCriterion("fecha_hasta is null");
            return (Criteria) this;
        }

        public Criteria andFechaHastaIsNotNull() {
            addCriterion("fecha_hasta is not null");
            return (Criteria) this;
        }

        public Criteria andFechaHastaEqualTo(Date value) {
            addCriterionForJDBCDate("fecha_hasta =", value, "fechaHasta");
            return (Criteria) this;
        }

        public Criteria andFechaHastaNotEqualTo(Date value) {
            addCriterionForJDBCDate("fecha_hasta <>", value, "fechaHasta");
            return (Criteria) this;
        }

        public Criteria andFechaHastaGreaterThan(Date value) {
            addCriterionForJDBCDate("fecha_hasta >", value, "fechaHasta");
            return (Criteria) this;
        }

        public Criteria andFechaHastaGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("fecha_hasta >=", value, "fechaHasta");
            return (Criteria) this;
        }

        public Criteria andFechaHastaLessThan(Date value) {
            addCriterionForJDBCDate("fecha_hasta <", value, "fechaHasta");
            return (Criteria) this;
        }

        public Criteria andFechaHastaLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("fecha_hasta <=", value, "fechaHasta");
            return (Criteria) this;
        }

        public Criteria andFechaHastaIn(List<Date> values) {
            addCriterionForJDBCDate("fecha_hasta in", values, "fechaHasta");
            return (Criteria) this;
        }

        public Criteria andFechaHastaNotIn(List<Date> values) {
            addCriterionForJDBCDate("fecha_hasta not in", values, "fechaHasta");
            return (Criteria) this;
        }

        public Criteria andFechaHastaBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("fecha_hasta between", value1, value2, "fechaHasta");
            return (Criteria) this;
        }

        public Criteria andFechaHastaNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("fecha_hasta not between", value1, value2, "fechaHasta");
            return (Criteria) this;
        }

        public Criteria andClienteIdIsNull() {
            addCriterion("cliente_id is null");
            return (Criteria) this;
        }

        public Criteria andClienteIdIsNotNull() {
            addCriterion("cliente_id is not null");
            return (Criteria) this;
        }

        public Criteria andClienteIdEqualTo(Integer value) {
            addCriterion("cliente_id =", value, "clienteId");
            return (Criteria) this;
        }

        public Criteria andClienteIdNotEqualTo(Integer value) {
            addCriterion("cliente_id <>", value, "clienteId");
            return (Criteria) this;
        }

        public Criteria andClienteIdGreaterThan(Integer value) {
            addCriterion("cliente_id >", value, "clienteId");
            return (Criteria) this;
        }

        public Criteria andClienteIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("cliente_id >=", value, "clienteId");
            return (Criteria) this;
        }

        public Criteria andClienteIdLessThan(Integer value) {
            addCriterion("cliente_id <", value, "clienteId");
            return (Criteria) this;
        }

        public Criteria andClienteIdLessThanOrEqualTo(Integer value) {
            addCriterion("cliente_id <=", value, "clienteId");
            return (Criteria) this;
        }

        public Criteria andClienteIdIn(List<Integer> values) {
            addCriterion("cliente_id in", values, "clienteId");
            return (Criteria) this;
        }

        public Criteria andClienteIdNotIn(List<Integer> values) {
            addCriterion("cliente_id not in", values, "clienteId");
            return (Criteria) this;
        }

        public Criteria andClienteIdBetween(Integer value1, Integer value2) {
            addCriterion("cliente_id between", value1, value2, "clienteId");
            return (Criteria) this;
        }

        public Criteria andClienteIdNotBetween(Integer value1, Integer value2) {
            addCriterion("cliente_id not between", value1, value2, "clienteId");
            return (Criteria) this;
        }

        public Criteria andEstadoIsNull() {
            addCriterion("estado is null");
            return (Criteria) this;
        }

        public Criteria andEstadoIsNotNull() {
            addCriterion("estado is not null");
            return (Criteria) this;
        }

        public Criteria andEstadoEqualTo(String value) {
            addCriterion("estado =", value, "estado");
            return (Criteria) this;
        }

        public Criteria andEstadoNotEqualTo(String value) {
            addCriterion("estado <>", value, "estado");
            return (Criteria) this;
        }

        public Criteria andEstadoGreaterThan(String value) {
            addCriterion("estado >", value, "estado");
            return (Criteria) this;
        }

        public Criteria andEstadoGreaterThanOrEqualTo(String value) {
            addCriterion("estado >=", value, "estado");
            return (Criteria) this;
        }

        public Criteria andEstadoLessThan(String value) {
            addCriterion("estado <", value, "estado");
            return (Criteria) this;
        }

        public Criteria andEstadoLessThanOrEqualTo(String value) {
            addCriterion("estado <=", value, "estado");
            return (Criteria) this;
        }

        public Criteria andEstadoLike(String value) {
            addCriterion("estado like", value, "estado");
            return (Criteria) this;
        }

        public Criteria andEstadoNotLike(String value) {
            addCriterion("estado not like", value, "estado");
            return (Criteria) this;
        }

        public Criteria andEstadoIn(List<String> values) {
            addCriterion("estado in", values, "estado");
            return (Criteria) this;
        }

        public Criteria andEstadoNotIn(List<String> values) {
            addCriterion("estado not in", values, "estado");
            return (Criteria) this;
        }

        public Criteria andEstadoBetween(String value1, String value2) {
            addCriterion("estado between", value1, value2, "estado");
            return (Criteria) this;
        }

        public Criteria andEstadoNotBetween(String value1, String value2) {
            addCriterion("estado not between", value1, value2, "estado");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table prestacion
     *
     * @mbggenerated do_not_delete_during_merge Sun Jun 19 15:33:44 ART 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table prestacion
     *
     * @mbggenerated Sun Jun 19 15:33:44 ART 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}